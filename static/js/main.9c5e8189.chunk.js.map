{"version":3,"sources":["image/background.jpg","logo.svg","Components/Navbar.js","Components/Textform.js","Components/Footer.js","Components/Modealert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","gmode","title","src","ink","alt","href","nav2","tognt","type","onClick","changeMode","Textform","tlen","timetoread","useState","text","setText","rtxt","replace","trim","split","length","tl","tr","undefined","toFixed","trs","String","timereadf","rows","value","onChange","e","target","placeholder","newText","toUpperCase","toLowerCase","rmtext","style","textAlign","Footer","marginTop","Modealert","alert","typ","id","status","message","parentNode","display","defaultProps","App","mode","setMode","setTogmt","setAlert","showAlert","msg","types","autohidealert","setTimeout","document","getElementById","body","backgroundColor","color","ald","imk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c5e8189.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.8be2d332.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport ink from '../logo.svg'\r\n// import About from './About'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n \r\n    return (\r\n       <>\r\n       <nav className={props.gmode}>\r\n           <span>{props.title}<span className=\"circle\"></span></span>\r\n           <img src={ink} alt=\"logo\" className=\"logo\" />\r\n        <ul className=\"navbar\">\r\n          <li><a href=\"\\\">Home</a><span></span></li>\r\n          <li><a href=\"\\\">{props.nav2}</a><span></span></li>\r\n          <li><a href=\"\\\">About</a><span></span></li>\r\n          <li><a href=\"\\\">Contact Us</a><span></span></li>\r\n        </ul>\r\n        <div className=\"toogleb\" title={props.tognt}>\r\n          <input type=\"checkbox\" onClick={props.changeMode}/>\r\n        </div>\r\n      </nav>\r\n       </>\r\n    )\r\n\r\n    \r\n}\r\n\r\nNavbar.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  nav2:PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  title:\"SRV\",\r\n  nav2:\"Gallery\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function Textform() {\r\n    const [text,setText] = useState(\"\");\r\n    const onChangehandler = (e)=>{\r\n        // console.log(\"On change\");\r\n        setText(e.target.value);\r\n    }\r\n    const onClickhandler = ()=>{\r\n        // console.log(\"onclick\");\r\n        // console.log(text);\r\n        if(text!==undefined){\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        }\r\n    }\r\n    const onClickdhandler = ()=>{\r\n        // console.log(\"clear\");\r\n        // console.log(text);\r\n        if(text!==undefined){\r\n            setText(\"\");\r\n            }\r\n    }\r\n    \r\n    const onClickuphandler = ()=>{\r\n        if(text!==undefined){\r\n            const newText = text.toLowerCase();\r\n            setText(newText);\r\n            }\r\n    }\r\n\r\n    const onextraspaceRemove = ()=>{\r\n        let rmtext = text.replace(/\\s+/g,' ').trim();\r\n        setText(rmtext);\r\n    }\r\n    const justifyPreview ={\r\n        textAlign:\"justify\",\r\n    }\r\n    let tlen ;\r\n   let tl = ()=>{\r\n       \r\n       if(text!==\"\"){\r\n       let rtxt = text.replace(/\\s+/g,' ').trim();\r\n       tlen = rtxt.split(\" \").length;\r\n       \r\n       \r\n       }\r\n       \r\n        return tlen;\r\n    }\r\n    tl();\r\n\r\n    let timetoread ;\r\n    const timereadf = ()=>{\r\n        let tr;\r\n       \r\n        if(tlen===undefined){\r\n            tr=0;\r\n        }else if(tlen/3>=60){\r\n           tr = tlen/3;\r\n\r\n           tr = tr.toFixed(2);\r\n     \r\n           tr = tr/60;\r\n           tr = tr.toFixed(2);\r\n           tr = String(tr);\r\n           tr = tr.split(\".\");\r\n          let trs = (60*tr[1])/100;\r\n            trs = trs.toFixed();\r\n            tr = `${tr[0] } minute ${trs} second`;\r\n     \r\n        }else{\r\n            tr = tlen/3;\r\n            tr = tr.toFixed();\r\n            tr = `${tr} second`;\r\n        }\r\n      \r\n            timetoread = tr;\r\n        \r\n        return timetoread;\r\n    }\r\n    timereadf();\r\n    return (\r\n        <>\r\n        <div className=\"taf\">\r\n            <h2>Enter the text anlyzee to below</h2>\r\n            <textarea className=\"ta\" rows=\"8\" value={text} onChange={onChangehandler}placeholder=\"Enter text here...\"></textarea>\r\n            <button className=\"btn btn-primary\" onClick={onClickhandler}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary\" onClick={onClickuphandler}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary\" onClick={onextraspaceRemove}>Remove extra space</button>\r\n            <button className=\"btn btn-danger\" onClick={onClickdhandler}>Clear</button>\r\n        </div>\r\n        <div className=\"taf\">\r\n        <h2>Your text summary</h2>\r\n        <p>{tlen>=0?tlen:\"0\"} words and {text.length} characters</p>\r\n        <p>{timetoread===0?\"0 second\":timetoread} time to read this sentence.</p>\r\n        <h2>Preview</h2>\r\n        <p style={justifyPreview}>{text.length!==0?text:\"Please enter some text\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    const mrstyle = {\r\n        marginTop:\"15px\",\r\n    }\r\n    return (\r\n        <div>\r\n            <footer style={mrstyle} className={props.gmode}>\r\n                <p>All rights reserved Â© 2021-2022</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Modealert(props) {\r\n    const alertclose = (e)=>{\r\n        let hidealert = e.target.parentNode.parentNode;\r\n        hidealert.style.display=\"none\";\r\n    \r\n    }\r\n    return (\r\n        props.alert && <>\r\n         <div className={`alertd ${props.alert.typ}`} id=\"aldiv\">\r\n            <p><strong>{props.alert.status}: </strong> {props.alert.message}<span onClick={alertclose}>X</span></p>\r\n            \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","// import logo from \"./logo.svg\";\nimport './App.css';\nimport imk from './image/background.jpg';\nimport Navbar from './Components/Navbar'\nimport Textform from './Components/Textform'\nimport Footer from './Components/Footer'\nimport React, { useState } from 'react'\nimport Modealert from './Components/Modealert';\n\n\nlet name = \"saurabh\";\nfunction App() {\n\n  const [mode,setMode] = useState(\"navfc\");\n  const [tognt,setTogmt] = useState(\"Enable Dark Mode\");\n  const [alert,setAlert] = useState({});\n \n  const showAlert =(status,msg,types)=>{\n    setAlert({\n      status:status,\n      message:msg,\n      typ:types,\n    })\n  }\n\n  const autohidealert = ()=>{\n    setTimeout(()=>{\n      let ald = document.getElementById(\"aldiv\");\n      ald.style.display=\"none\";\n    },8000)\n  }\n\n  const changeMode = ()=>{\n    if(mode===\"navfc\"){\n      setMode(\"navfcb\");\n      document.body.style.backgroundColor=\"#17151e\";\n      document.body.style.color=\"white\";\n      setTogmt(\"Enable Light Mode\");\n      showAlert(\"Success\",\"Enable Dark Mode....\",\"alertdc\");\n      let ald = document.getElementById(\"aldiv\");\n      \n      if(ald!==null){\n        ald.style.display=\"block\";\n        autohidealert();\n      }\n    }else{\n      setMode(\"navfc\");\n      document.body.style.backgroundColor=\"white\";\n      document.body.style.color=\"black\";\n      setTogmt(\"Enable Dark Mode\");\n      showAlert(\"Success\",\"Enable Light Mode....\",\"alertdc\")\n      let ald = document.getElementById(\"aldiv\");\n     \n      if(ald!==null){\n        ald.style.display=\"block\";\n        autohidealert();\n      }\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"VRS\" nav2=\"Forms\" gmode={mode} changeMode={changeMode} tognt={tognt}/>\n      <div className=\"main\">\n      <Modealert alert={alert}/>\n      <img src={imk} alt=\"logo\" className=\"skm\" />\n      <div className=\"mainsub\">\n      <h1>Something Something...</h1>\n      <p>honesty is best policy</p>\n      </div>\n      </div>\n      <div className=\"container\">\n        <h1>Hello {name}</h1>\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur recusandae suscipit neque saepe porro repellat atque ducimus culpa quas dolor. Doloribus, ab. Ex sed non assumenda fuga maxime provident ipsa.Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur recusandae suscipit neque saepe porro repellat atque ducimus culpa quas dolor. Doloribus, ab. Ex sed non assumenda fuga maxime provident ipsa.Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur recusandae suscipit neque saepe porro repellat atque ducimus culpa quas dolor. Doloribus, ab. Ex sed non assumenda fuga maxime provident ipsa.</p>\n      </div>\n      <div className=\"fdiv\">\n      <Textform/>\n\n      </div>\n      <Footer gmode={mode}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}